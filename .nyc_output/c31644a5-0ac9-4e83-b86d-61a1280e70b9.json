{"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\compile_and_run.ts":{"path":"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\compile_and_run.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":16},"end":{"line":33,"column":1}},"25":{"start":{"line":26,"column":28},"end":{"line":26,"column":110}},"26":{"start":{"line":26,"column":91},"end":{"line":26,"column":106}},"27":{"start":{"line":27,"column":4},"end":{"line":32,"column":7}},"28":{"start":{"line":28,"column":36},"end":{"line":28,"column":97}},"29":{"start":{"line":28,"column":42},"end":{"line":28,"column":70}},"30":{"start":{"line":28,"column":85},"end":{"line":28,"column":95}},"31":{"start":{"line":29,"column":35},"end":{"line":29,"column":100}},"32":{"start":{"line":29,"column":41},"end":{"line":29,"column":73}},"33":{"start":{"line":29,"column":88},"end":{"line":29,"column":98}},"34":{"start":{"line":30,"column":32},"end":{"line":30,"column":116}},"35":{"start":{"line":31,"column":8},"end":{"line":31,"column":78}},"36":{"start":{"line":34,"column":0},"end":{"line":34,"column":62}},"37":{"start":{"line":35,"column":0},"end":{"line":35,"column":31}},"38":{"start":{"line":36,"column":22},"end":{"line":36,"column":60}},"39":{"start":{"line":37,"column":15},"end":{"line":37,"column":30}},"40":{"start":{"line":38,"column":14},"end":{"line":38,"column":30}},"41":{"start":{"line":39,"column":13},"end":{"line":39,"column":54}},"42":{"start":{"line":40,"column":17},"end":{"line":40,"column":62}},"43":{"start":{"line":41,"column":25},"end":{"line":41,"column":30}},"44":{"start":{"line":44,"column":4},"end":{"line":108,"column":7}},"45":{"start":{"line":45,"column":23},"end":{"line":49,"column":9}},"46":{"start":{"line":50,"column":8},"end":{"line":107,"column":12}},"47":{"start":{"line":50,"column":48},"end":{"line":107,"column":10}},"48":{"start":{"line":54,"column":33},"end":{"line":54,"column":106}},"49":{"start":{"line":55,"column":39},"end":{"line":55,"column":87}},"50":{"start":{"line":56,"column":12},"end":{"line":67,"column":13}},"51":{"start":{"line":58,"column":20},"end":{"line":58,"column":92}},"52":{"start":{"line":59,"column":20},"end":{"line":59,"column":59}},"53":{"start":{"line":60,"column":20},"end":{"line":60,"column":26}},"54":{"start":{"line":62,"column":20},"end":{"line":66,"column":23}},"55":{"start":{"line":69,"column":12},"end":{"line":77,"column":15}},"56":{"start":{"line":70,"column":16},"end":{"line":70,"column":69}},"57":{"start":{"line":71,"column":16},"end":{"line":75,"column":19}},"58":{"start":{"line":76,"column":16},"end":{"line":76,"column":23}},"59":{"start":{"line":79,"column":12},"end":{"line":106,"column":15}},"60":{"start":{"line":80,"column":29},"end":{"line":80,"column":77}},"61":{"start":{"line":81,"column":16},"end":{"line":81,"column":41}},"62":{"start":{"line":83,"column":16},"end":{"line":88,"column":71}},"63":{"start":{"line":84,"column":20},"end":{"line":84,"column":67}},"64":{"start":{"line":85,"column":21},"end":{"line":88,"column":71}},"65":{"start":{"line":86,"column":20},"end":{"line":86,"column":67}},"66":{"start":{"line":88,"column":20},"end":{"line":88,"column":71}},"67":{"start":{"line":89,"column":16},"end":{"line":89,"column":34}},"68":{"start":{"line":91,"column":16},"end":{"line":105,"column":17}},"69":{"start":{"line":92,"column":20},"end":{"line":96,"column":23}},"70":{"start":{"line":99,"column":20},"end":{"line":99,"column":72}},"71":{"start":{"line":100,"column":20},"end":{"line":104,"column":23}},"72":{"start":{"line":110,"column":0},"end":{"line":110,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":44},"end":{"line":25,"column":45}},"loc":{"start":{"line":25,"column":89},"end":{"line":33,"column":1}},"line":25},"7":{"name":"adopt","decl":{"start":{"line":26,"column":13},"end":{"line":26,"column":18}},"loc":{"start":{"line":26,"column":26},"end":{"line":26,"column":112}},"line":26},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":70},"end":{"line":26,"column":71}},"loc":{"start":{"line":26,"column":89},"end":{"line":26,"column":108}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":63},"end":{"line":32,"column":5}},"line":27},"10":{"name":"fulfilled","decl":{"start":{"line":28,"column":17},"end":{"line":28,"column":26}},"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":99}},"line":28},"11":{"name":"rejected","decl":{"start":{"line":29,"column":17},"end":{"line":29,"column":25}},"loc":{"start":{"line":29,"column":33},"end":{"line":29,"column":102}},"line":29},"12":{"name":"step","decl":{"start":{"line":30,"column":17},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":30},"end":{"line":30,"column":118}},"line":30},"13":{"name":"compileAndRun","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":22}},"loc":{"start":{"line":43,"column":51},"end":{"line":109,"column":1}},"line":43},"14":{"name":"(anonymous_14)","decl":{"start":{"line":44,"column":43},"end":{"line":44,"column":44}},"loc":{"start":{"line":44,"column":56},"end":{"line":108,"column":5}},"line":44},"15":{"name":"(anonymous_15)","decl":{"start":{"line":50,"column":27},"end":{"line":50,"column":28}},"loc":{"start":{"line":50,"column":48},"end":{"line":107,"column":10}},"line":50},"16":{"name":"(anonymous_16)","decl":{"start":{"line":50,"column":80},"end":{"line":50,"column":81}},"loc":{"start":{"line":50,"column":93},"end":{"line":107,"column":9}},"line":50},"17":{"name":"(anonymous_17)","decl":{"start":{"line":69,"column":45},"end":{"line":69,"column":46}},"loc":{"start":{"line":69,"column":57},"end":{"line":77,"column":13}},"line":69},"18":{"name":"(anonymous_18)","decl":{"start":{"line":79,"column":75},"end":{"line":79,"column":76}},"loc":{"start":{"line":79,"column":84},"end":{"line":90,"column":13}},"line":79},"19":{"name":"(anonymous_19)","decl":{"start":{"line":90,"column":15},"end":{"line":90,"column":16}},"loc":{"start":{"line":90,"column":27},"end":{"line":106,"column":13}},"line":90}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":16},"end":{"line":33,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":17},"end":{"line":25,"column":21}},{"start":{"line":25,"column":25},"end":{"line":25,"column":39}},{"start":{"line":25,"column":44},"end":{"line":33,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":35},"end":{"line":26,"column":109}},"type":"cond-expr","locations":[{"start":{"line":26,"column":56},"end":{"line":26,"column":61}},{"start":{"line":26,"column":64},"end":{"line":26,"column":109}}],"line":26},"18":{"loc":{"start":{"line":27,"column":16},"end":{"line":27,"column":34}},"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":17}},{"start":{"line":27,"column":22},"end":{"line":27,"column":33}}],"line":27},"19":{"loc":{"start":{"line":30,"column":32},"end":{"line":30,"column":115}},"type":"cond-expr","locations":[{"start":{"line":30,"column":46},"end":{"line":30,"column":67}},{"start":{"line":30,"column":70},"end":{"line":30,"column":115}}],"line":30},"20":{"loc":{"start":{"line":31,"column":51},"end":{"line":31,"column":67}},"type":"binary-expr","locations":[{"start":{"line":31,"column":51},"end":{"line":31,"column":61}},{"start":{"line":31,"column":65},"end":{"line":31,"column":67}}],"line":31},"21":{"loc":{"start":{"line":56,"column":12},"end":{"line":67,"column":13}},"type":"switch","locations":[{"start":{"line":57,"column":16},"end":{"line":60,"column":26}},{"start":{"line":61,"column":16},"end":{"line":66,"column":23}}],"line":56},"22":{"loc":{"start":{"line":83,"column":16},"end":{"line":88,"column":71}},"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":88,"column":71}},{"start":{"line":83,"column":16},"end":{"line":88,"column":71}}],"line":83},"23":{"loc":{"start":{"line":85,"column":21},"end":{"line":88,"column":71}},"type":"if","locations":[{"start":{"line":85,"column":21},"end":{"line":88,"column":71}},{"start":{"line":85,"column":21},"end":{"line":88,"column":71}}],"line":85},"24":{"loc":{"start":{"line":91,"column":16},"end":{"line":105,"column":17}},"type":"if","locations":[{"start":{"line":91,"column":16},"end":{"line":105,"column":17}},{"start":{"line":91,"column":16},"end":{"line":105,"column":17}}],"line":91}},"s":{"0":1,"1":9,"2":9,"3":9,"4":9,"5":9,"6":2,"7":9,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":9,"21":9,"22":1,"23":1,"24":1,"25":12,"26":0,"27":14,"28":12,"29":12,"30":0,"31":0,"32":0,"33":0,"34":26,"35":14,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":7,"45":7,"46":7,"47":7,"48":7,"49":7,"50":7,"51":6,"52":6,"53":6,"54":1,"55":6,"56":3,"57":3,"58":3,"59":6,"60":3,"61":3,"62":3,"63":2,"64":1,"65":1,"66":0,"67":3,"68":3,"69":3,"70":0,"71":0,"72":1},"f":{"0":9,"1":2,"2":0,"3":1,"4":0,"5":1,"6":14,"7":12,"8":0,"9":14,"10":12,"11":0,"12":26,"13":7,"14":7,"15":7,"16":7,"17":3,"18":3,"19":3},"b":{"0":[1,1,1],"1":[1,0],"2":[9,0],"3":[9,0],"4":[9,9],"5":[0,9],"6":[9,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[9,0],"15":[9,9],"16":[1,1,1],"17":[12,0],"18":[14,14],"19":[14,12],"20":[14,14],"21":[6,1],"22":[2,1],"23":[1,0],"24":[3,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/compile_and_run.ts","sources":["C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/compile_and_run.ts"],"names":[],"mappings":"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","sourcesContent":["import * as child_process from \"child_process\";\r\nimport { promisify } from \"util\";\r\nimport {\r\n    ExerciseTest,\r\n    Language,\r\n    TestResponse,\r\n    COMPILATION_ERROR_CODE,\r\n    TEST_PASSED_CODE,\r\n    TEST_FAILED_CODE,\r\n    TIMEDOUT_CODE,\r\n    UNKNOWN_FAILURE_CODE,\r\n    UNSUPPORTED_LANGUGAGE,\r\n} from \"./lib\";\r\n\r\nconst exec = promisify(child_process.exec);\r\nconst execFile = promisify(child_process.execFile);\r\n\r\nconst TIMEOUT_DURATION = 15000; // 15 seconds in milliseconds\r\n\r\n// Function to compile and run code based on the detected language\r\nasync function compileAndRun(\r\n    exerciseTest: ExerciseTest,\r\n    test_case_id: string,\r\n): Promise<TestResponse> {\r\n    let response: TestResponse = {\r\n        testCaseId: test_case_id,\r\n        reason: \"\",\r\n        responseCode: 999,\r\n    };\r\n\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        let compileCommand: string;\r\n        let runCommand: string;\r\n\r\n        // Create code file path\r\n        const codeFilePath = `${exerciseTest.userId}/testFile${test_case_id}.${exerciseTest.language}`;\r\n        const executableFilePath = `${exerciseTest.userId}/testFile${test_case_id}`;\r\n\r\n        switch (exerciseTest.language.toLowerCase()) {\r\n            case Language.C:\r\n                compileCommand = `gcc -o ${executableFilePath} ${codeFilePath} -lcunit`;\r\n                runCommand = `./${executableFilePath}`;\r\n                break;\r\n            default:\r\n                return resolve({\r\n                    testCaseId: test_case_id,\r\n                    reason: \"Unsupported langugage\",\r\n                    responseCode: UNSUPPORTED_LANGUGAGE\r\n                });\r\n        }\r\n\r\n        // Compile the code\r\n        await exec(compileCommand).catch((reason) => {\r\n            console.error(`Compilation error: ${reason.stderr}`);\r\n            resolve({\r\n                testCaseId: test_case_id,\r\n                reason: reason.stderr,\r\n                responseCode: COMPILATION_ERROR_CODE,\r\n            });\r\n            return;\r\n        });\r\n\r\n        // Execute the compiled code\r\n        await execFile(runCommand, { timeout: TIMEOUT_DURATION }).then(\r\n            (res) => {\r\n                var result = res.stdout.substring(res.stdout.indexOf(\"Test\"));\r\n                response.reason = result;\r\n                //TODO: better logic for identifieng failure and passes\r\n\r\n                if (result.includes(\"Test failed\"))\r\n                    response.responseCode = TEST_FAILED_CODE;\r\n                else if (result.includes(\"Test passed\"))\r\n                    response.responseCode = TEST_PASSED_CODE;\r\n                else response.responseCode = UNKNOWN_FAILURE_CODE;\r\n\r\n                resolve(response);\r\n            },\r\n            (reason) => {\r\n                if (reason.stderr == \"\") {\r\n                    return resolve({\r\n                        testCaseId: test_case_id,\r\n                        reason: \"timed out\",\r\n                        responseCode: TIMEDOUT_CODE,\r\n                    });\r\n                } else {\r\n                    console.log(`\\nUnknown stderr: ${reason.stderr}\\n`);\r\n                    resolve({\r\n                        testCaseId: test_case_id,\r\n                        reason: reason.stderr,\r\n                        responseCode: UNKNOWN_FAILURE_CODE,\r\n                    });\r\n                }\r\n            },\r\n        );\r\n    });\r\n}\r\n\r\nexport { compileAndRun };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1c72223afcb662bf4878d1515974700a620a0210","contentHash":"89d40cf5a27ac697faf5cc43ac75ee752c7e9a3cf4b1656ca81ea91983c4b11a"},"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\lib.ts":{"path":"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\lib.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":200}},"2":{"start":{"line":4,"column":30},"end":{"line":4,"column":31}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"4":{"start":{"line":6,"column":29},"end":{"line":6,"column":30}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"6":{"start":{"line":8,"column":22},"end":{"line":8,"column":23}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"8":{"start":{"line":10,"column":31},"end":{"line":10,"column":32}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":56}},"10":{"start":{"line":12,"column":25},"end":{"line":12,"column":26}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"12":{"start":{"line":14,"column":25},"end":{"line":14,"column":26}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"14":{"start":{"line":18,"column":0},"end":{"line":20,"column":51}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":1},"end":{"line":18,"column":2}},"loc":{"start":{"line":18,"column":21},"end":{"line":20,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":3},"end":{"line":20,"column":49}},"type":"binary-expr","locations":[{"start":{"line":20,"column":3},"end":{"line":20,"column":11}},{"start":{"line":20,"column":16},"end":{"line":20,"column":48}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/lib.ts","sources":["C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/lib.ts"],"names":[],"mappings":";;;AAAA,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAuC5B,sDAAqB;AAtCzB,MAAM,oBAAoB,GAAG,CAAC,CAAC;AAiC3B,oDAAoB;AAhCxB,MAAM,aAAa,GAAG,CAAC,CAAC;AAoCpB,sCAAa;AAnCjB,MAAM,sBAAsB,GAAG,CAAC,CAAC;AAgC7B,wDAAsB;AA/B1B,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAiCvB,4CAAgB;AAhCpB,MAAM,gBAAgB,GAAG,CAAC,CAAC;AA+BvB,4CAAgB;AA7BpB,oDAAoD;AACpD,IAAK,QAEJ;AAFD,WAAK,QAAQ;IACT,mBAAO,CAAA;AACX,CAAC,EAFI,QAAQ,wBAAR,QAAQ,QAEZ","sourcesContent":["const UNSUPPORTED_LANGUGAGE = 5;\r\nconst UNKNOWN_FAILURE_CODE = 4;\r\nconst TIMEDOUT_CODE = 3;\r\nconst COMPILATION_ERROR_CODE = 2;\r\nconst TEST_FAILED_CODE = 1;\r\nconst TEST_PASSED_CODE = 0;\r\n\r\n// Enum representing supported programming languages\r\nenum Language {\r\n    C = \"c\",\r\n}\r\n\r\ninterface TestResponse {\r\n    testCaseId: string;\r\n    reason: string;\r\n    responseCode: number;\r\n}\r\n\r\ninterface ExerciseTest {\r\n    language: string;\r\n    code: string;\r\n    userId: string;\r\n    testCases: TestCase[];\r\n}\r\n\r\ninterface TestCase {\r\n    testCaseId: string;\r\n    code: string;\r\n}\r\n\r\nexport {\r\n    Language,\r\n    TestResponse,\r\n    ExerciseTest,\r\n    UNKNOWN_FAILURE_CODE,\r\n    COMPILATION_ERROR_CODE,\r\n    TEST_PASSED_CODE,\r\n    TEST_FAILED_CODE,\r\n    TIMEDOUT_CODE,\r\n    UNSUPPORTED_LANGUGAGE,\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c336bdd8e9a410a2e220d08a0608142e7386786e","contentHash":"8e188e7215bd1c1ef1f7274c148782dde28659d3b371a72b83130e079028e5b7"},"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\converter.ts":{"path":"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\converter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":36}},"3":{"start":{"line":7,"column":61},"end":{"line":7,"column":73}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":63}},"6":{"start":{"line":10,"column":4},"end":{"line":65,"column":7}},"7":{"start":{"line":11,"column":28},"end":{"line":11,"column":41}},"8":{"start":{"line":12,"column":22},"end":{"line":12,"column":44}},"9":{"start":{"line":13,"column":22},"end":{"line":13,"column":46}},"10":{"start":{"line":14,"column":29},"end":{"line":14,"column":58}},"11":{"start":{"line":15,"column":8},"end":{"line":63,"column":4}},"12":{"start":{"line":64,"column":8},"end":{"line":64,"column":120}},"13":{"start":{"line":67,"column":0},"end":{"line":67,"column":44}},"14":{"start":{"line":69,"column":17},"end":{"line":69,"column":31}},"15":{"start":{"line":70,"column":4},"end":{"line":75,"column":57}},"16":{"start":{"line":71,"column":8},"end":{"line":71,"column":39}},"17":{"start":{"line":72,"column":8},"end":{"line":72,"column":50}},"18":{"start":{"line":75,"column":8},"end":{"line":75,"column":57}},"19":{"start":{"line":77,"column":0},"end":{"line":77,"column":42}},"20":{"start":{"line":79,"column":4},"end":{"line":80,"column":77}},"21":{"start":{"line":80,"column":8},"end":{"line":80,"column":77}},"22":{"start":{"line":81,"column":4},"end":{"line":81,"column":73}},"23":{"start":{"line":83,"column":0},"end":{"line":83,"column":34}}},"fnMap":{"0":{"name":"testRunnerRunner","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":40},"end":{"line":66,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":22},"end":{"line":10,"column":23}},"loc":{"start":{"line":10,"column":36},"end":{"line":65,"column":5}},"line":10},"2":{"name":"createDirectory","decl":{"start":{"line":68,"column":9},"end":{"line":68,"column":24}},"loc":{"start":{"line":68,"column":36},"end":{"line":76,"column":1}},"line":68},"3":{"name":"createFiles","decl":{"start":{"line":78,"column":9},"end":{"line":78,"column":20}},"loc":{"start":{"line":78,"column":54},"end":{"line":82,"column":1}},"line":78}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":29},"end":{"line":14,"column":58}},"type":"cond-expr","locations":[{"start":{"line":14,"column":37},"end":{"line":14,"column":51}},{"start":{"line":14,"column":54},"end":{"line":14,"column":58}}],"line":14},"1":{"loc":{"start":{"line":70,"column":4},"end":{"line":75,"column":57}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":75,"column":57}},{"start":{"line":70,"column":4},"end":{"line":75,"column":57}}],"line":70},"2":{"loc":{"start":{"line":79,"column":4},"end":{"line":80,"column":77}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":80,"column":77}},{"start":{"line":79,"column":4},"end":{"line":80,"column":77}}],"line":79}},"s":{"0":1,"1":1,"2":1,"3":8,"4":8,"5":8,"6":8,"7":8,"8":8,"9":8,"10":8,"11":8,"12":8,"13":1,"14":9,"15":9,"16":9,"17":9,"18":0,"19":1,"20":18,"21":0,"22":18,"23":1},"f":{"0":8,"1":8,"2":9,"3":18},"b":{"0":[6,2],"1":[9,0],"2":[0,18]},"inputSourceMap":{"version":3,"file":"C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/converter.ts","sources":["C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/converter.ts"],"names":[],"mappings":";;;AAAA,qCAA8E;AAG9E,yCAAyC;AACzC,SAAS,gBAAgB,CAAC,YAA0B;IAChD,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,YAAY,CAAC;IACtE,eAAe,CAAC,SAAS,CAAC,CAAC;IAC3B,WAAW,CAAC,GAAG,SAAS,iBAAiB,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC3D,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC3B,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC;QAClC,MAAM,KAAK,GAAG,sBAAsB,CAAC;QACrC,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;QAEnD,WAAW,CACP,GAAG,SAAS,YAAY,QAAQ,CAAC,UAAU,IAAI,QAAQ,EAAE,EACzD;yBACa,QAAQ;;;;;;;;MAQ3B,QAAQ,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;MAsBb,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;;qCAaE,YAAY;;;;EAI/C,CACO,CAAC;QACF,QAAQ,CAAC,IAAI,GAAG,IAAA,sBAAY,EACxB,GAAG,SAAS,YAAY,QAAQ,CAAC,UAAU,IAAI,QAAQ,EAAE,EACzD,OAAO,CACV,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC;AAoBQ,4CAAgB;AAlBzB,SAAS,eAAe,CAAC,SAAiB;IACtC,MAAM,IAAI,GAAG,GAAG,SAAS,EAAE,CAAC;IAC5B,IAAI,CAAC,IAAA,oBAAU,EAAC,IAAI,CAAC,EAAE,CAAC;QACpB,IAAA,mBAAS,EAAC,IAAI,CAAC,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,WAAW,CAAC,CAAC;IAC9C,CAAC;;QAAM,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,kBAAkB,CAAC,CAAC;AAC5D,CAAC;AAYuC,0CAAe;AAVvD,SAAS,WAAW,CAChB,aAAqB,EACrB,OAAe,EACf,OAAgB;IAEhB,IAAI,OAAO;QAAE,IAAA,wBAAc,EAAC,aAAa,EAAE,GAAG,OAAO,IAAI,EAAE,MAAM,CAAC,CAAC;IAEnE,IAAA,wBAAc,EAAC,aAAa,EAAE,GAAG,OAAO,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1D,CAAC;AAE0B,kCAAW","sourcesContent":["import { appendFileSync, existsSync, mkdirSync, readFileSync } from \"node:fs\";\r\nimport { ExerciseTest } from \"./lib\";\r\n\r\n// Creates a directory for all resources.\r\nfunction testRunnerRunner(exerciseTest: ExerciseTest) {\r\n    const { userId: studentID, language, code, testCases } = exerciseTest;\r\n    createDirectory(studentID);\r\n    createFiles(`${studentID}/exerciseFile.${language}`, code);\r\n    testCases.forEach((testCase) => {\r\n        const inputString = testCase.code;\r\n        const regex = /CU_[^\\(]*\\(([^)]+)\\)/;\r\n        const match = inputString.match(regex);\r\n        const functionName = match ? match[1] + `)` : null;\r\n\r\n        createFiles(\r\n            `${studentID}/testFile${testCase.testCaseId}.${language}`,\r\n            `\r\n#include \"exerciseFile.${language}\"\r\n\r\n#include <CUnit/CUnit.h>\r\n#include <CUnit/Basic.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid testFunc(void) {\r\n    ${testCase.code}\r\n}\r\n\r\nint main(void) {\r\n    // Initialize the CUnit test registry\r\n    if (CUE_SUCCESS != CU_initialize_registry()) {\r\n        return CU_get_error();\r\n    }\r\n\r\n    // Add a suite to the registry\r\n    CU_pSuite suite = CU_add_suite(\"Suite_1\", NULL, NULL);\r\n    if (suite == NULL) {\r\n        CU_cleanup_registry();\r\n        return CU_get_error();\r\n    }\r\n\r\n    // Add the test function to the suite\r\n    if (CU_add_test(suite, \"testFunc\", testFunc) == NULL) {\r\n        CU_cleanup_registry();\r\n        return CU_get_error();\r\n    }\r\n\r\n    ${testCase.code.split(\"CU_\")[0]}\r\n\r\n    // Run the tests using the basic interface\r\n    CU_basic_set_mode(CU_BRM_SILENT);\r\n    CU_basic_run_suite(suite);\r\n    \r\n    int num_failures = CU_get_number_of_failures();\r\n\r\n    // Print only if there are failures\r\n    if (num_failures > 0) {\r\n        printf(\"\\\\nTest failed\\\\n Expected:\");\r\n        CU_basic_show_failures(CU_get_failure_list());\r\n\r\n        printf(\"\\\\nActual: %d\\\\n\", ${functionName});\r\n    } else {\r\n        printf(\"Test passed\\\\n\");\r\n    }\r\n}`,\r\n        );\r\n        testCase.code = readFileSync(\r\n            `${studentID}/testFile${testCase.testCaseId}.${language}`,\r\n            \"utf-8\",\r\n        );\r\n    });\r\n}\r\n\r\nfunction createDirectory(directory: string): void {\r\n    const path = `${directory}`;\r\n    if (!existsSync(path)) {\r\n        mkdirSync(path);\r\n        console.log(`Directory ${path} created!`);\r\n    } else console.log(`Directory ${path} already exists!`);\r\n}\r\n\r\nfunction createFiles(\r\n    directoryPath: string,\r\n    content: string,\r\n    include?: string,\r\n): void {\r\n    if (include) appendFileSync(directoryPath, `${include}\\n`, \"utf8\");\r\n\r\n    appendFileSync(directoryPath, `${content}\\n`, \"utf8\");\r\n}\r\n\r\nexport { testRunnerRunner, createFiles, createDirectory };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f2ebb2e57a3106035318542bed6d291fa7414c69","contentHash":"bff7034cf3c14f48002f3915e05ba170a75e95aec577b75b25df0d4c438bc805"}}