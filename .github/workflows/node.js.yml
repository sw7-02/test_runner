# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 20.9.0]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  build-win:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.x, 20.9.0]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  build-mac:
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [16.x, 20.9.0]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  fmt:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.9.0]
    
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run fmt-check
#npm can be used with package.json file to install all needed dependencies

  ghcr-publish:
    needs:
      - fmt
      - build-linux
      - build-win
      - build-mac
    permissions:
      packages: write
    env:
      REGISTRY: ghcr.io
      DOCKERFILE_PATH: ./Dockerfile

    runs-on: ubuntu-latest

    #if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v2
        name: Check out

      - uses: crazy-max/ghaction-docker-meta@v1
        name: Docker meta
        id: docker_meta
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tag-sha: true
          tag-edge: false
          tag-latest: true

      - uses: docker/setup-qemu-action@v1
        name: Set up QEMU

      - uses: docker/setup-buildx-action@v1
        name: Set up Docker Buildx

      - uses: actions/cache@v2.1.6
        name: Cache Docker layers
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1
        name: Login to GitHub Container Registry (ghcr.io)
        with:
          registry: ${{ env.REGISTRY }}
          # The login of the user that initiated the workflow run.
          username: ${{ github.actor }}
          # A token to authenticate on behalf of the GitHub App installed on your repository.
          password: ${{ github.token }}

      - uses: docker/build-push-action@v2
        # Allows us to retrieve the output from the build
        id: docker_image_build
        with:
          # builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache-new
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          # The context is NOT relative to the Dockerfile location but the repository root
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ env.DOCKERFILE_PATH }}
          tags: ${{ steps.docker_meta.outputs.tags }}

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Docker image digest
        run: echo ${{ steps.docker_image_build.outputs.digest }}
