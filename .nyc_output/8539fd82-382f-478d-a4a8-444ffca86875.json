{"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\compile_and_run.ts":{"path":"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\compile_and_run.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":16},"end":{"line":33,"column":1}},"25":{"start":{"line":26,"column":28},"end":{"line":26,"column":110}},"26":{"start":{"line":26,"column":91},"end":{"line":26,"column":106}},"27":{"start":{"line":27,"column":4},"end":{"line":32,"column":7}},"28":{"start":{"line":28,"column":36},"end":{"line":28,"column":97}},"29":{"start":{"line":28,"column":42},"end":{"line":28,"column":70}},"30":{"start":{"line":28,"column":85},"end":{"line":28,"column":95}},"31":{"start":{"line":29,"column":35},"end":{"line":29,"column":100}},"32":{"start":{"line":29,"column":41},"end":{"line":29,"column":73}},"33":{"start":{"line":29,"column":88},"end":{"line":29,"column":98}},"34":{"start":{"line":30,"column":32},"end":{"line":30,"column":116}},"35":{"start":{"line":31,"column":8},"end":{"line":31,"column":78}},"36":{"start":{"line":34,"column":0},"end":{"line":34,"column":62}},"37":{"start":{"line":35,"column":0},"end":{"line":35,"column":31}},"38":{"start":{"line":36,"column":11},"end":{"line":36,"column":38}},"39":{"start":{"line":37,"column":22},"end":{"line":37,"column":60}},"40":{"start":{"line":38,"column":15},"end":{"line":38,"column":30}},"41":{"start":{"line":39,"column":14},"end":{"line":39,"column":30}},"42":{"start":{"line":40,"column":13},"end":{"line":40,"column":54}},"43":{"start":{"line":41,"column":17},"end":{"line":41,"column":62}},"44":{"start":{"line":42,"column":25},"end":{"line":42,"column":29}},"45":{"start":{"line":45,"column":4},"end":{"line":110,"column":7}},"46":{"start":{"line":46,"column":23},"end":{"line":50,"column":9}},"47":{"start":{"line":51,"column":8},"end":{"line":109,"column":12}},"48":{"start":{"line":51,"column":48},"end":{"line":109,"column":10}},"49":{"start":{"line":55,"column":33},"end":{"line":55,"column":109}},"50":{"start":{"line":56,"column":39},"end":{"line":56,"column":90}},"51":{"start":{"line":57,"column":12},"end":{"line":69,"column":13}},"52":{"start":{"line":59,"column":20},"end":{"line":59,"column":92}},"53":{"start":{"line":60,"column":20},"end":{"line":60,"column":59}},"54":{"start":{"line":61,"column":20},"end":{"line":61,"column":26}},"55":{"start":{"line":63,"column":20},"end":{"line":63,"column":84}},"56":{"start":{"line":64,"column":20},"end":{"line":68,"column":23}},"57":{"start":{"line":70,"column":12},"end":{"line":70,"column":62}},"58":{"start":{"line":72,"column":12},"end":{"line":80,"column":15}},"59":{"start":{"line":73,"column":16},"end":{"line":73,"column":69}},"60":{"start":{"line":74,"column":16},"end":{"line":78,"column":19}},"61":{"start":{"line":79,"column":16},"end":{"line":79,"column":23}},"62":{"start":{"line":82,"column":12},"end":{"line":108,"column":15}},"63":{"start":{"line":84,"column":29},"end":{"line":84,"column":77}},"64":{"start":{"line":85,"column":16},"end":{"line":85,"column":41}},"65":{"start":{"line":87,"column":16},"end":{"line":92,"column":54}},"66":{"start":{"line":88,"column":20},"end":{"line":88,"column":72}},"67":{"start":{"line":89,"column":21},"end":{"line":92,"column":54}},"68":{"start":{"line":90,"column":20},"end":{"line":90,"column":72}},"69":{"start":{"line":92,"column":20},"end":{"line":92,"column":54}},"70":{"start":{"line":93,"column":16},"end":{"line":93,"column":36}},"71":{"start":{"line":94,"column":16},"end":{"line":94,"column":34}},"72":{"start":{"line":96,"column":16},"end":{"line":96,"column":68}},"73":{"start":{"line":97,"column":16},"end":{"line":107,"column":17}},"74":{"start":{"line":98,"column":20},"end":{"line":100,"column":66}},"75":{"start":{"line":103,"column":20},"end":{"line":103,"column":74}},"76":{"start":{"line":104,"column":20},"end":{"line":106,"column":73}},"77":{"start":{"line":112,"column":0},"end":{"line":112,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":44},"end":{"line":25,"column":45}},"loc":{"start":{"line":25,"column":89},"end":{"line":33,"column":1}},"line":25},"7":{"name":"adopt","decl":{"start":{"line":26,"column":13},"end":{"line":26,"column":18}},"loc":{"start":{"line":26,"column":26},"end":{"line":26,"column":112}},"line":26},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":70},"end":{"line":26,"column":71}},"loc":{"start":{"line":26,"column":89},"end":{"line":26,"column":108}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":63},"end":{"line":32,"column":5}},"line":27},"10":{"name":"fulfilled","decl":{"start":{"line":28,"column":17},"end":{"line":28,"column":26}},"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":99}},"line":28},"11":{"name":"rejected","decl":{"start":{"line":29,"column":17},"end":{"line":29,"column":25}},"loc":{"start":{"line":29,"column":33},"end":{"line":29,"column":102}},"line":29},"12":{"name":"step","decl":{"start":{"line":30,"column":17},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":30},"end":{"line":30,"column":118}},"line":30},"13":{"name":"compileAndRun","decl":{"start":{"line":44,"column":9},"end":{"line":44,"column":22}},"loc":{"start":{"line":44,"column":61},"end":{"line":111,"column":1}},"line":44},"14":{"name":"(anonymous_14)","decl":{"start":{"line":45,"column":43},"end":{"line":45,"column":44}},"loc":{"start":{"line":45,"column":56},"end":{"line":110,"column":5}},"line":45},"15":{"name":"(anonymous_15)","decl":{"start":{"line":51,"column":27},"end":{"line":51,"column":28}},"loc":{"start":{"line":51,"column":48},"end":{"line":109,"column":10}},"line":51},"16":{"name":"(anonymous_16)","decl":{"start":{"line":51,"column":80},"end":{"line":51,"column":81}},"loc":{"start":{"line":51,"column":93},"end":{"line":109,"column":9}},"line":51},"17":{"name":"(anonymous_17)","decl":{"start":{"line":72,"column":45},"end":{"line":72,"column":46}},"loc":{"start":{"line":72,"column":57},"end":{"line":80,"column":13}},"line":72},"18":{"name":"(anonymous_18)","decl":{"start":{"line":83,"column":22},"end":{"line":83,"column":23}},"loc":{"start":{"line":83,"column":31},"end":{"line":95,"column":13}},"line":83},"19":{"name":"(anonymous_19)","decl":{"start":{"line":95,"column":15},"end":{"line":95,"column":16}},"loc":{"start":{"line":95,"column":27},"end":{"line":108,"column":13}},"line":95}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":16},"end":{"line":33,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":17},"end":{"line":25,"column":21}},{"start":{"line":25,"column":25},"end":{"line":25,"column":39}},{"start":{"line":25,"column":44},"end":{"line":33,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":35},"end":{"line":26,"column":109}},"type":"cond-expr","locations":[{"start":{"line":26,"column":56},"end":{"line":26,"column":61}},{"start":{"line":26,"column":64},"end":{"line":26,"column":109}}],"line":26},"18":{"loc":{"start":{"line":27,"column":16},"end":{"line":27,"column":34}},"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":17}},{"start":{"line":27,"column":22},"end":{"line":27,"column":33}}],"line":27},"19":{"loc":{"start":{"line":30,"column":32},"end":{"line":30,"column":115}},"type":"cond-expr","locations":[{"start":{"line":30,"column":46},"end":{"line":30,"column":67}},{"start":{"line":30,"column":70},"end":{"line":30,"column":115}}],"line":30},"20":{"loc":{"start":{"line":31,"column":51},"end":{"line":31,"column":67}},"type":"binary-expr","locations":[{"start":{"line":31,"column":51},"end":{"line":31,"column":61}},{"start":{"line":31,"column":65},"end":{"line":31,"column":67}}],"line":31},"21":{"loc":{"start":{"line":57,"column":12},"end":{"line":69,"column":13}},"type":"switch","locations":[{"start":{"line":58,"column":16},"end":{"line":61,"column":26}},{"start":{"line":62,"column":16},"end":{"line":68,"column":23}}],"line":57},"22":{"loc":{"start":{"line":87,"column":16},"end":{"line":92,"column":54}},"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":92,"column":54}},{"start":{"line":87,"column":16},"end":{"line":92,"column":54}}],"line":87},"23":{"loc":{"start":{"line":89,"column":21},"end":{"line":92,"column":54}},"type":"if","locations":[{"start":{"line":89,"column":21},"end":{"line":92,"column":54}},{"start":{"line":89,"column":21},"end":{"line":92,"column":54}}],"line":89},"24":{"loc":{"start":{"line":97,"column":16},"end":{"line":107,"column":17}},"type":"if","locations":[{"start":{"line":97,"column":16},"end":{"line":107,"column":17}},{"start":{"line":97,"column":16},"end":{"line":107,"column":17}}],"line":97}},"s":{"0":1,"1":113,"2":113,"3":113,"4":113,"5":108,"6":5,"7":113,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":2,"16":0,"17":2,"18":2,"19":2,"20":113,"21":113,"22":2,"23":2,"24":1,"25":6,"26":0,"27":10,"28":6,"29":6,"30":0,"31":0,"32":0,"33":0,"34":16,"35":10,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":5,"46":5,"47":5,"48":5,"49":5,"50":5,"51":5,"52":3,"53":3,"54":3,"55":2,"56":2,"57":3,"58":3,"59":1,"60":1,"61":1,"62":3,"63":2,"64":2,"65":2,"66":1,"67":1,"68":1,"69":0,"70":2,"71":2,"72":1,"73":1,"74":1,"75":0,"76":0,"77":1},"f":{"0":113,"1":5,"2":0,"3":2,"4":0,"5":2,"6":10,"7":6,"8":0,"9":10,"10":6,"11":0,"12":16,"13":5,"14":5,"15":5,"16":5,"17":1,"18":2,"19":1},"b":{"0":[1,1,1],"1":[1,0],"2":[113,0],"3":[108,5],"4":[113,113],"5":[5,108],"6":[108,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,2],"12":[2,2],"13":[2,0],"14":[113,0],"15":[113,113],"16":[1,1,1],"17":[6,0],"18":[10,10],"19":[10,6],"20":[10,10],"21":[3,2],"22":[1,1],"23":[1,0],"24":[1,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/compile_and_run.ts","sources":["C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/compile_and_run.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\r\nimport * as child_process from 'child_process';\r\nimport { promisify } from 'util';\r\nimport { ExerciseTest, Language, TestResponse, COMPILATION_ERROR_CODE, EXECUTION_ERROR_CODE, UNSUPPORTED_LANGUGAGE, TEST_PASSED_CODE, TEST_FAILED_CODE, TIMEDOUT_CODE } from './lib';\r\nimport { TIMEOUT } from 'dns';\r\nimport { stderr } from 'process';\r\n\r\nconst exec = promisify(child_process.exec);\r\nconst execFile = promisify(child_process.execFile);\r\n\r\nconst TIMEOUT_DURATION = 3000; // 5 seconds in milliseconds\r\n\r\n// Function to compile and run code based on the detected language\r\nasync function compileAndRun(exerciseTest: ExerciseTest, testCode: string, test_case_id: string): Promise<TestResponse> {\r\n    let response: TestResponse = {\r\n        test_case_id: test_case_id,\r\n        reason: \"\",\r\n        responseCode: \"\"\r\n    }\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        let compileCommand: string;\r\n        let runCommand: string;\r\n\r\n        // Create temporary file path\r\n        const tempFilePath = `src/${exerciseTest.studentID}/temp${test_case_id}.${exerciseTest.language}`\r\n        const executableFilePath = `src/${exerciseTest.studentID}/temp${test_case_id}`\r\n\r\n        switch (exerciseTest.language) {\r\n            case Language.C:\r\n                compileCommand = `gcc -o ${executableFilePath} ${tempFilePath} -lcunit`;\r\n                runCommand = `./${executableFilePath}`;\r\n                break;\r\n            default:\r\n                console.error(`Unsupported language: ${exerciseTest.language}`);\r\n                return resolve({\r\n                    test_case_id: test_case_id,\r\n                    reason: \"Unsupported langugage\",\r\n                    responseCode: `${UNSUPPORTED_LANGUGAGE}`\r\n                });\r\n        }\r\n\r\n        fs.writeFileSync(tempFilePath, testCode, 'utf-8');   \r\n        \r\n        // Compile the code\r\n        await exec(compileCommand).catch((reason) => {\r\n            console.error(`Compilation error: ${reason.stderr}`);\r\n            resolve({\r\n                test_case_id: test_case_id,\r\n                reason: reason.stderr,\r\n                responseCode: `${COMPILATION_ERROR_CODE}`\r\n            });\r\n            return;\r\n        });\r\n\r\n        // Execute the compiled code\r\n        await execFile(runCommand, {timeout: TIMEOUT_DURATION})\r\n            .then((res) => {\r\n                var result = res.stdout.substring(res.stdout.indexOf(\"Test\"));\r\n                response.reason = result;\r\n                //TODO: better logic for identifieng failure and passes\r\n                if (result.includes(\"Test failed\"))\r\n                    response.responseCode = `${TEST_FAILED_CODE}`;\r\n                else if (result.includes(\"Test passed\"))\r\n                    response.responseCode = `${TEST_PASSED_CODE}`;\r\n                else\r\n                    response.responseCode = \"Unknown\";\r\n        \r\n                console.log(result)\r\n                resolve(response);\r\n            }, (reason) => {\r\n                console.log(\"\\n\\nreason.code = \"+ reason + \"\\n\\n\");\r\n                if(reason.stderr == \"\"){\r\n                    return resolve({test_case_id: test_case_id,\r\n                        reason: \"Timed out\",\r\n                        responseCode: `${TIMEDOUT_CODE}`});\r\n                } else {\r\n                    console.log(`\\nExecution stderr: ${reason.stderr}\\n`);\r\n                    resolve({test_case_id: test_case_id,\r\n                        reason: reason.stderr,\r\n                        responseCode: `${EXECUTION_ERROR_CODE}`});\r\n                }\r\n                    \r\n            });\r\n    });\r\n}\r\n\r\nexport {compileAndRun};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2410baee6c173e644723689c19df8ecd102255a8","contentHash":"45509c260010279ca173cb0fec906cce5b7163b96c6d6c47021e9635c0cbf3a7"},"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\lib.ts":{"path":"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\lib.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":200}},"2":{"start":{"line":5,"column":31},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":56}},"4":{"start":{"line":7,"column":29},"end":{"line":7,"column":31}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":30},"end":{"line":9,"column":32}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":54}},"8":{"start":{"line":11,"column":22},"end":{"line":11,"column":24}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"10":{"start":{"line":13,"column":25},"end":{"line":13,"column":26}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"12":{"start":{"line":15,"column":25},"end":{"line":15,"column":26}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"14":{"start":{"line":19,"column":0},"end":{"line":24,"column":51}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":42}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":42}},"17":{"start":{"line":22,"column":4},"end":{"line":22,"column":30}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":1},"end":{"line":19,"column":2}},"loc":{"start":{"line":19,"column":21},"end":{"line":24,"column":1}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":3},"end":{"line":24,"column":49}},"type":"binary-expr","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":11}},{"start":{"line":24,"column":16},"end":{"line":24,"column":48}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/lib.ts","sources":["C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/lib.ts"],"names":[],"mappings":";;;AACA,0DAA0D;AAE1D,MAAM,sBAAsB,GAAG,EAAE,CAAC;AAiCY,wDAAsB;AAhCpE,MAAM,oBAAoB,GAAG,EAAE,CAAC;AAgCsC,oDAAoB;AA/B1F,MAAM,qBAAqB,GAAG,CAAC,CAAC,CAAC;AA+B6E,sDAAqB;AA9BnI,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC;AA8B8H,sCAAa;AA7BpK,MAAM,gBAAgB,GAAG,CAAC,CAAC;AA6BiE,4CAAgB;AA5B5G,MAAM,gBAAgB,GAAG,CAAC,CAAC;AA4B0G,4CAAgB;AA1BrJ,oDAAoD;AACpD,IAAK,QAKJ;AALD,WAAK,QAAQ;IACT,qCAAyB,CAAA;IACzB,qCAAyB,CAAA;IACzB,yBAAa,CAAA;IACb,mBAAO,CAAA;AACX,CAAC,EALI,QAAQ,wBAAR,QAAQ,QAKZ","sourcesContent":["import fs from \"fs\";\r\n//import * as fs from \"fs\";//Lukas skal køre det sådan her\r\n\r\nconst COMPILATION_ERROR_CODE = 16;\r\nconst EXECUTION_ERROR_CODE = 69;\r\nconst UNSUPPORTED_LANGUGAGE = -2;\r\nconst TIMEDOUT_CODE = -1;\r\nconst TEST_PASSED_CODE = 0;\r\nconst TEST_FAILED_CODE = 1;\r\n\r\n// Enum representing supported programming languages\r\nenum Language {\r\n    TypeScript = 'typescript',\r\n    JavaScript = 'javascript',\r\n    Python = 'py',\r\n    C = 'c',\r\n}\r\n\r\ninterface TestResponse {\r\n    test_case_id: string\r\n    reason: string\r\n    responseCode: string\r\n}\r\n\r\ninterface ExerciseTest {\r\n    language: string;\r\n    code: string;\r\n    studentID: string;\r\n    testCases: TestCase[];\r\n}\r\n\r\ninterface TestCase {\r\n    testCaseId: string;\r\n    code: string;\r\n}\r\n\r\nexport {Language, TestResponse, ExerciseTest, COMPILATION_ERROR_CODE, EXECUTION_ERROR_CODE, TEST_PASSED_CODE, UNSUPPORTED_LANGUGAGE, TEST_FAILED_CODE, TIMEDOUT_CODE}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"06764f863691e8c06a5de49482040cdc3d7fecc7","contentHash":"31352be381d8b743430d46b71b8426afa02f95034dcbf62af430e32313944bdb"},"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\converter.ts":{"path":"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\converter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":36}},"3":{"start":{"line":7,"column":53},"end":{"line":7,"column":65}},"4":{"start":{"line":8,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":44}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":50}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":71}},"8":{"start":{"line":12,"column":8},"end":{"line":15,"column":11}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":147}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":134}},"11":{"start":{"line":18,"column":8},"end":{"line":18,"column":29}},"12":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}},"13":{"start":{"line":23,"column":4},"end":{"line":29,"column":5}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":48}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":59}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":68}},"17":{"start":{"line":31,"column":0},"end":{"line":31,"column":42}},"18":{"start":{"line":33,"column":4},"end":{"line":34,"column":77}},"19":{"start":{"line":34,"column":8},"end":{"line":34,"column":77}},"20":{"start":{"line":35,"column":4},"end":{"line":35,"column":73}},"21":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}}},"fnMap":{"0":{"name":"testRunnerRunner","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":40},"end":{"line":20,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":26},"end":{"line":12,"column":27}},"loc":{"start":{"line":12,"column":38},"end":{"line":15,"column":9}},"line":12},"2":{"name":"createDirectory","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":24}},"loc":{"start":{"line":22,"column":40},"end":{"line":30,"column":1}},"line":22},"3":{"name":"createFiles","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":54},"end":{"line":36,"column":1}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":29,"column":5}},{"start":{"line":23,"column":4},"end":{"line":29,"column":5}}],"line":23},"1":{"loc":{"start":{"line":33,"column":4},"end":{"line":34,"column":77}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":34,"column":77}},{"start":{"line":33,"column":4},"end":{"line":34,"column":77}}],"line":33}},"s":{"0":1,"1":1,"2":1,"3":7,"4":7,"5":7,"6":7,"7":7,"8":7,"9":8,"10":8,"11":0,"12":1,"13":15,"14":15,"15":15,"16":0,"17":1,"18":17,"19":8,"20":17,"21":1},"f":{"0":7,"1":8,"2":15,"3":17},"b":{"0":[15,0],"1":[8,9]},"inputSourceMap":{"version":3,"file":"C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/converter.ts","sources":["C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/converter.ts"],"names":[],"mappings":";;;AAAA,qCAA8E;AAI9E,yCAAyC;AACzC,SAAS,gBAAgB,CAAE,YAA0B;IACjD,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,YAAY,CAAC;IAE9D,IAAI,CAAC;QACD,eAAe,CAAC,OAAO,SAAS,EAAE,CAAC,CAAC;QACpC,eAAe,CAAC,OAAO,SAAS,QAAQ,CAAC,CAAC;QAC1C,WAAW,CAAC,OAAO,SAAS,iBAAiB,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/D,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACzB,WAAW,CAAC,OAAO,SAAS,kBAAkB,QAAQ,CAAC,UAAU,IAAI,QAAQ,EAAE,EAAE,QAAQ,CAAC,IAAI,EAC1F,0BAA0B,QAAQ,GAAG,CAAC,CAAC;YAC3C,QAAQ,CAAC,IAAI,GAAG,IAAA,sBAAY,EAAC,OAAO,SAAS,kBAAkB,QAAQ,CAAC,UAAU,IAAI,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;QAC/G,CAAC,CAAC,CAAC;IACP,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;AACL,CAAC;AAmBO,4CAAgB;AAjBxB,SAAS,eAAe,CAAC,aAAqB;IAC1C,IAAI,CAAC,IAAA,oBAAU,EAAC,aAAa,CAAC,EAAE,CAAC;QAC7B,IAAA,mBAAS,EAAC,aAAa,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,aAAa,aAAa,WAAW,CAAC,CAAC;IACvD,CAAC;SACI,CAAC;QACF,OAAO,CAAC,KAAK,CAAC,aAAa,aAAa,kBAAkB,CAAC,CAAC;IAChE,CAAC;AACL,CAAC;AASyB,0CAAe;AAPzC,SAAS,WAAW,CAAE,aAAqB,EAAE,OAAe,EAAE,OAAgB;IAC1E,IAAG,OAAO;QACN,IAAA,wBAAc,EAAC,aAAa,EAAE,GAAG,OAAO,IAAI,EAAE,MAAM,CAAC,CAAC;IAE1D,IAAA,wBAAc,EAAC,aAAa,EAAE,GAAG,OAAO,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1D,CAAC;AAE0C,kCAAW","sourcesContent":["import { appendFileSync, existsSync, mkdirSync, readFileSync } from \"node:fs\";\r\nimport { ExerciseTest } from './lib';\r\nimport * as fs from \"fs\";\r\n\r\n// Creates a directory for all resources.\r\nfunction testRunnerRunner (exerciseTest: ExerciseTest) {\r\n    const { studentID, language, code, testCases } = exerciseTest;\r\n\r\n    try {\r\n        createDirectory(`src/${studentID}`);\r\n        createDirectory(`src/${studentID}/tests`);\r\n        createFiles(`src/${studentID}/exerciseFile.${language}`, code);\r\n        testCases.forEach(testCase => {\r\n            createFiles(`src/${studentID}/tests/testFile${testCase.testCaseId}.${language}`, testCase.code, \r\n                `#include \"exerciseFile.${language}\"`);\r\n            testCase.code = readFileSync(`src/${studentID}/tests/testFile${testCase.testCaseId}.${language}`, \"utf-8\");\r\n        });  \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nfunction createDirectory(directoryPath: string): void {\r\n    if (!existsSync(directoryPath)) {\r\n        mkdirSync(directoryPath);\r\n        console.log(`Directory ${directoryPath} created!`);\r\n    }\r\n    else {\r\n        console.error(`Directory ${directoryPath} already exists!`);\r\n    }    \r\n}\r\n\r\nfunction createFiles (directoryPath: string, content: string, include?: string): void {\r\n    if(include)\r\n        appendFileSync(directoryPath, `${include}\\n`, \"utf8\");\r\n\r\n    appendFileSync(directoryPath, `${content}\\n`, \"utf8\");\r\n}\r\n\r\nexport {testRunnerRunner, createDirectory, createFiles};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"afc125c907efdc6bad487b97cd5bed18cb6e8b8c","contentHash":"dabd05973fa971710436aa9e2bb38db48bee93f517817b7325d48a4de4828e62"},"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\test_runner.ts":{"path":"C:\\Users\\mariu\\OneDrive\\Documents\\GitHub\\test_runner\\src\\test_runner.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":16},"end":{"line":33,"column":1}},"25":{"start":{"line":26,"column":28},"end":{"line":26,"column":110}},"26":{"start":{"line":26,"column":91},"end":{"line":26,"column":106}},"27":{"start":{"line":27,"column":4},"end":{"line":32,"column":7}},"28":{"start":{"line":28,"column":36},"end":{"line":28,"column":97}},"29":{"start":{"line":28,"column":42},"end":{"line":28,"column":70}},"30":{"start":{"line":28,"column":85},"end":{"line":28,"column":95}},"31":{"start":{"line":29,"column":35},"end":{"line":29,"column":100}},"32":{"start":{"line":29,"column":41},"end":{"line":29,"column":73}},"33":{"start":{"line":29,"column":88},"end":{"line":29,"column":98}},"34":{"start":{"line":30,"column":32},"end":{"line":30,"column":116}},"35":{"start":{"line":31,"column":8},"end":{"line":31,"column":78}},"36":{"start":{"line":34,"column":0},"end":{"line":34,"column":62}},"37":{"start":{"line":35,"column":0},"end":{"line":35,"column":51}},"38":{"start":{"line":36,"column":11},"end":{"line":36,"column":38}},"39":{"start":{"line":37,"column":20},"end":{"line":37,"column":42}},"40":{"start":{"line":38,"column":14},"end":{"line":38,"column":30}},"41":{"start":{"line":39,"column":26},"end":{"line":39,"column":54}},"42":{"start":{"line":42,"column":21},"end":{"line":149,"column":1}},"43":{"start":{"line":151,"column":25},"end":{"line":151,"column":62}},"44":{"start":{"line":153,"column":27},"end":{"line":153,"column":55}},"45":{"start":{"line":155,"column":4},"end":{"line":160,"column":7}},"46":{"start":{"line":157,"column":8},"end":{"line":157,"column":62}},"47":{"start":{"line":159,"column":8},"end":{"line":159,"column":35}},"48":{"start":{"line":162,"column":0},"end":{"line":162,"column":26}},"49":{"start":{"line":165,"column":4},"end":{"line":187,"column":7}},"50":{"start":{"line":166,"column":28},"end":{"line":166,"column":30}},"51":{"start":{"line":167,"column":8},"end":{"line":186,"column":9}},"52":{"start":{"line":168,"column":12},"end":{"line":177,"column":13}},"53":{"start":{"line":169,"column":16},"end":{"line":169,"column":135}},"54":{"start":{"line":170,"column":16},"end":{"line":170,"column":100}},"55":{"start":{"line":171,"column":16},"end":{"line":176,"column":60}},"56":{"start":{"line":172,"column":20},"end":{"line":172,"column":51}},"57":{"start":{"line":173,"column":21},"end":{"line":176,"column":60}},"58":{"start":{"line":174,"column":20},"end":{"line":174,"column":54}},"59":{"start":{"line":175,"column":21},"end":{"line":176,"column":60}},"60":{"start":{"line":176,"column":20},"end":{"line":176,"column":60}},"61":{"start":{"line":180,"column":12},"end":{"line":180,"column":66}},"62":{"start":{"line":183,"column":12},"end":{"line":183,"column":73}},"63":{"start":{"line":185,"column":12},"end":{"line":185,"column":31}},"64":{"start":{"line":190,"column":4},"end":{"line":203,"column":7}},"65":{"start":{"line":191,"column":8},"end":{"line":202,"column":11}},"66":{"start":{"line":192,"column":12},"end":{"line":201,"column":15}},"67":{"start":{"line":193,"column":16},"end":{"line":200,"column":17}},"68":{"start":{"line":194,"column":20},"end":{"line":194,"column":95}},"69":{"start":{"line":195,"column":20},"end":{"line":195,"column":32}},"70":{"start":{"line":198,"column":20},"end":{"line":198,"column":84}},"71":{"start":{"line":199,"column":20},"end":{"line":199,"column":30}},"72":{"start":{"line":205,"column":0},"end":{"line":205,"column":42}},"73":{"start":{"line":208,"column":0},"end":{"line":211,"column":3}},"74":{"start":{"line":210,"column":4},"end":{"line":210,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":44},"end":{"line":25,"column":45}},"loc":{"start":{"line":25,"column":89},"end":{"line":33,"column":1}},"line":25},"7":{"name":"adopt","decl":{"start":{"line":26,"column":13},"end":{"line":26,"column":18}},"loc":{"start":{"line":26,"column":26},"end":{"line":26,"column":112}},"line":26},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":70},"end":{"line":26,"column":71}},"loc":{"start":{"line":26,"column":89},"end":{"line":26,"column":108}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":63},"end":{"line":32,"column":5}},"line":27},"10":{"name":"fulfilled","decl":{"start":{"line":28,"column":17},"end":{"line":28,"column":26}},"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":99}},"line":28},"11":{"name":"rejected","decl":{"start":{"line":29,"column":17},"end":{"line":29,"column":25}},"loc":{"start":{"line":29,"column":33},"end":{"line":29,"column":102}},"line":29},"12":{"name":"step","decl":{"start":{"line":30,"column":17},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":30},"end":{"line":30,"column":118}},"line":30},"13":{"name":"runCode","decl":{"start":{"line":154,"column":9},"end":{"line":154,"column":16}},"loc":{"start":{"line":154,"column":37},"end":{"line":161,"column":1}},"line":154},"14":{"name":"(anonymous_14)","decl":{"start":{"line":155,"column":43},"end":{"line":155,"column":44}},"loc":{"start":{"line":155,"column":56},"end":{"line":160,"column":5}},"line":155},"15":{"name":"runAllTests","decl":{"start":{"line":164,"column":9},"end":{"line":164,"column":20}},"loc":{"start":{"line":164,"column":23},"end":{"line":188,"column":1}},"line":164},"16":{"name":"(anonymous_16)","decl":{"start":{"line":165,"column":43},"end":{"line":165,"column":44}},"loc":{"start":{"line":165,"column":56},"end":{"line":187,"column":5}},"line":165},"17":{"name":"deleteDirectory","decl":{"start":{"line":189,"column":9},"end":{"line":189,"column":24}},"loc":{"start":{"line":189,"column":40},"end":{"line":204,"column":1}},"line":189},"18":{"name":"(anonymous_18)","decl":{"start":{"line":190,"column":43},"end":{"line":190,"column":44}},"loc":{"start":{"line":190,"column":56},"end":{"line":203,"column":5}},"line":190},"19":{"name":"(anonymous_19)","decl":{"start":{"line":191,"column":27},"end":{"line":191,"column":28}},"loc":{"start":{"line":191,"column":48},"end":{"line":202,"column":9}},"line":191},"20":{"name":"(anonymous_20)","decl":{"start":{"line":192,"column":54},"end":{"line":192,"column":55}},"loc":{"start":{"line":192,"column":63},"end":{"line":201,"column":13}},"line":192},"21":{"name":"(anonymous_21)","decl":{"start":{"line":209,"column":10},"end":{"line":209,"column":11}},"loc":{"start":{"line":209,"column":25},"end":{"line":211,"column":1}},"line":209}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":16},"end":{"line":33,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":17},"end":{"line":25,"column":21}},{"start":{"line":25,"column":25},"end":{"line":25,"column":39}},{"start":{"line":25,"column":44},"end":{"line":33,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":35},"end":{"line":26,"column":109}},"type":"cond-expr","locations":[{"start":{"line":26,"column":56},"end":{"line":26,"column":61}},{"start":{"line":26,"column":64},"end":{"line":26,"column":109}}],"line":26},"18":{"loc":{"start":{"line":27,"column":16},"end":{"line":27,"column":34}},"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":17}},{"start":{"line":27,"column":22},"end":{"line":27,"column":33}}],"line":27},"19":{"loc":{"start":{"line":30,"column":32},"end":{"line":30,"column":115}},"type":"cond-expr","locations":[{"start":{"line":30,"column":46},"end":{"line":30,"column":67}},{"start":{"line":30,"column":70},"end":{"line":30,"column":115}}],"line":30},"20":{"loc":{"start":{"line":31,"column":51},"end":{"line":31,"column":67}},"type":"binary-expr","locations":[{"start":{"line":31,"column":51},"end":{"line":31,"column":61}},{"start":{"line":31,"column":65},"end":{"line":31,"column":67}}],"line":31},"21":{"loc":{"start":{"line":171,"column":16},"end":{"line":176,"column":60}},"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":176,"column":60}},{"start":{"line":171,"column":16},"end":{"line":176,"column":60}}],"line":171},"22":{"loc":{"start":{"line":171,"column":73},"end":{"line":171,"column":141}},"type":"binary-expr","locations":[{"start":{"line":171,"column":73},"end":{"line":171,"column":106}},{"start":{"line":171,"column":110},"end":{"line":171,"column":141}}],"line":171},"23":{"loc":{"start":{"line":173,"column":21},"end":{"line":176,"column":60}},"type":"if","locations":[{"start":{"line":173,"column":21},"end":{"line":176,"column":60}},{"start":{"line":173,"column":21},"end":{"line":176,"column":60}}],"line":173},"24":{"loc":{"start":{"line":175,"column":21},"end":{"line":176,"column":60}},"type":"if","locations":[{"start":{"line":175,"column":21},"end":{"line":176,"column":60}},{"start":{"line":175,"column":21},"end":{"line":176,"column":60}}],"line":175},"25":{"loc":{"start":{"line":193,"column":16},"end":{"line":200,"column":17}},"type":"if","locations":[{"start":{"line":193,"column":16},"end":{"line":200,"column":17}},{"start":{"line":193,"column":16},"end":{"line":200,"column":17}}],"line":193}},"s":{"0":1,"1":104,"2":104,"3":104,"4":104,"5":99,"6":3,"7":104,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":104,"21":104,"22":1,"23":1,"24":1,"25":3,"26":0,"27":5,"28":3,"29":3,"30":0,"31":0,"32":0,"33":0,"34":8,"35":5,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":0,"57":1,"58":0,"59":1,"60":1,"61":1,"62":1,"63":1,"64":3,"65":3,"66":3,"67":3,"68":0,"69":0,"70":3,"71":3,"72":1,"73":1,"74":1},"f":{"0":104,"1":3,"2":0,"3":1,"4":0,"5":1,"6":5,"7":3,"8":0,"9":5,"10":3,"11":0,"12":8,"13":1,"14":1,"15":1,"16":1,"17":3,"18":3,"19":3,"20":3,"21":1},"b":{"0":[1,1,1],"1":[1,0],"2":[104,0],"3":[99,5],"4":[104,104],"5":[5,99],"6":[99,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[104,0],"15":[104,104],"16":[1,1,1],"17":[3,0],"18":[5,5],"19":[5,3],"20":[5,5],"21":[0,1],"22":[1,0],"23":[0,1],"24":[1,0],"25":[0,3]},"inputSourceMap":{"version":3,"file":"C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/test_runner.ts","sources":["C:/Users/mariu/OneDrive/Documents/GitHub/test_runner/src/test_runner.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\r\nimport { testRunnerRunner } from \"./converter\";\r\nimport { COMPILATION_ERROR_CODE, EXECUTION_ERROR_CODE, ExerciseTest, TIMEDOUT_CODE, TestResponse, UNSUPPORTED_LANGUGAGE } from \"./lib\";\r\nimport { compileAndRun } from \"./compile_and_run\";\r\nimport { resolve } from \"path\";\r\n\r\n// receive API call (with JSON object)\r\n// TODO: Replace exerciseTest example with real data (some sort of handling)\r\nconst exerciseTest = {\r\n    \"language\": \"py\",\r\n    \"code\": `int addTwoNumbers(int number1, int number2) {\r\n    int sum;\r\n    while(1) {\r\n        sum = number1 + number2;\r\n    }\r\n    return sum;\r\n}\r\n    `,\r\n    \"studentID\": \"67890\",\r\n    \"testCases\": [\r\n        { \"testCaseId\": 1, \"code\": ` \r\n#include <CUnit/CUnit.h>\r\n#include <CUnit/Basic.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid testAddTwoNumbers(void) {\r\n    CU_ASSERT(addTwoNumbers(1, 2) == 3);\r\n}\r\n\r\nint main(void) {\r\n    // Initialize the CUnit test registry\r\n    if (CUE_SUCCESS != CU_initialize_registry()) {\r\n        return CU_get_error();\r\n    }\r\n\r\n    // Add a suite to the registry\r\n    CU_pSuite suite = CU_add_suite(\"Suite_1\", NULL, NULL);\r\n    if (suite == NULL) {\r\n        CU_cleanup_registry();\r\n        return CU_get_error();\r\n    }\r\n\r\n    // Add the test function to the suite\r\n    if (CU_add_test(suite, \"testAddTwoNumbers\", testAddTwoNumbers) == NULL) {\r\n        CU_cleanup_registry();\r\n        return CU_get_error();\r\n    }\r\n\r\n\r\n    // Run the tests using the basic interface\r\n    CU_basic_set_mode(CU_BRM_SILENT);\r\n    CU_basic_run_suite(suite);\r\n    \r\n    int num_failures = CU_get_number_of_failures();\r\n\r\n    // Print only if there are failures\r\n    if (num_failures > 0) {\r\n        printf(\"\\\\nTest failed\\\\n Expected:\");\r\n        CU_basic_show_failures(CU_get_failure_list());\r\n\r\n        printf(\"\\\\nActual: %d\\\\n\", addTwoNumbers(1, 2));\r\n    } else {\r\n        printf(\"Test passed\\\\n\");\r\n    }\r\n}\r\n        `},\r\n        { \"testCaseId\": 2, \"code\": `\r\n#include <CUnit/CUnit.h>\r\n#include <CUnit/Basic.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid testAddTwoNumbers(void) {\r\n    CU_ASSERT(addTwoNumbers(1, 2) == 2);\r\n}\r\n\r\nint main(void) {\r\n    // Initialize the CUnit test registry\r\n    if (CUE_SUCCESS != CU_initialize_registry()) {\r\n        return CU_get_error();\r\n    }\r\n\r\n    // Add a suite to the registry\r\n    CU_pSuite suite = CU_add_suite(\"Suite_1\", NULL, NULL);\r\n    if (suite == NULL) {\r\n        CU_cleanup_registry();\r\n        return CU_get_error();\r\n    }\r\n\r\n    // Add the test function to the suite\r\n    if (CU_add_test(suite, \"testAddTwoNumbers\", testAddTwoNumbers) == NULL) {\r\n        CU_cleanup_registry();\r\n        return CU_get_error();\r\n    }\r\n\r\n\r\n    // Run the tests using the basic interface\r\n    CU_basic_set_mode(CU_BRM_SILENT);\r\n    CU_basic_run_suite(suite);\r\n    \r\n    int num_failures = CU_get_number_of_failures();\r\n\r\n    // Print only if there are failures\r\n    if (num_failures > 0) {\r\n        printf(\"\\\\nTest failed\\\\n Expected:\");\r\n        CU_basic_show_failures(CU_get_failure_list());\r\n\r\n        printf(\"\\\\nActual: %d\\\\n\", addTwoNumbers(1, 2));\r\n    } else {\r\n        printf(\"Test passed\\\\n\");\r\n    }\r\n}\r\n        `}\r\n    ]\r\n};\r\n\r\n// Convert JSON to ExerciseTest instance\r\nconst exerciseTestJSON = JSON.stringify(exerciseTest, null, 2);\r\n// Parse JSON and cast to interfaces\r\nconst parsedExerciseTest: ExerciseTest = JSON.parse(exerciseTestJSON);\r\n\r\nasync function runCode (parsedExerciseTest: ExerciseTest): Promise<TestResponse[]> {\r\n    // convert parsedExerciseTest to directories and files\r\n    testRunnerRunner(parsedExerciseTest);  \r\n\r\n    // Call the async function\r\n    return await runAllTests();\r\n}\r\n\r\n// Compile and run tests\r\nasync function runAllTests() : Promise<TestResponse[]> {\r\n    const testResults: TestResponse[] = [];\r\n    try {\r\n        for (const testCase of parsedExerciseTest.testCases) {\r\n            testResults.push((\r\n                await compileAndRun(parsedExerciseTest, testCase.code, testCase.testCaseId)));\r\n            \r\n            console.log(`\\ntest result: ${testResults[testResults.length - 1].responseCode}\\n`)\r\n            if (testResults[testResults.length - 1].responseCode == (`${COMPILATION_ERROR_CODE}` || `${EXECUTION_ERROR_CODE}`))\r\n                throw new Error(\"Test failed\");\r\n            else if (testResults[testResults.length - 1].responseCode == `${TIMEDOUT_CODE}`) \r\n                throw new Error(\"Test timed out\");\r\n            else if (testResults[testResults.length - 1].responseCode == `${UNSUPPORTED_LANGUGAGE}`)\r\n                throw new Error(\"Unsupported language\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"OUTER ERROR HAS BEEN FOUND: \" + error);\r\n    } finally {\r\n        await deleteDirectory(`src/${parsedExerciseTest.studentID}`);\r\n        //console.log(testResults);\r\n        return testResults;\r\n    }\r\n}\r\n\r\nasync function deleteDirectory(directoryPath: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n        fs.rm(directoryPath, { recursive: true }, (err) => {\r\n            if (err) {\r\n                console.error(`Error deleting directory ${directoryPath}: ${err.message}`);\r\n                reject(err);\r\n            } else {\r\n                console.log(`Directory ${directoryPath} deleted successfully.`);\r\n                resolve();\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n//let testResults = runCode(parsedExerciseTest);\r\n//console.log(`Here: ${testResults}`)\r\nrunCode(parsedExerciseTest)\r\n    .then(testResults => {\r\n        console.log(`Here: ${JSON.stringify(testResults)}`);\r\n    })\r\n\r\nexport {runCode, deleteDirectory};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"542e319dbe9bdb884e831a371f0d4886d8b01293","contentHash":"d9b911b48425d34d5676e6d973b44a8eac7ca5dc511ce5e13e1a4f70777eb863"}}